Bhai ab baat karte hain "Chunks" ki â€” ye word har baar aa raha hai jab bhi streams ki baat hoti hai na. Chalo usko tod ke simple karte hain ðŸ‘‡

ðŸ”¶ What are Chunks in Node.js Streams?

ðŸ“˜ Technical Definition:
A chunk is a small piece of data that is processed one at a time by a stream, rather than loading the entire data set into memory.

ðŸ‘¶ Kindergarten Explanation:
Soch le bhai â€” tere paas ek laddu ka dabba hai (file). Agar tu ek saath poora khaye, pet dukh jayega ðŸ¤•.

Isliye tu ek-ek laddu (chunk) khata hai â€” dheere dheere, aaram se digest hota hai ðŸ˜‹.

Waise hi stream file ka data ek ek tukda (chunk) me deta hai.

ðŸ§ª Code Example Showing Chunks

const fs = require('fs');

const stream = fs.createReadStream('bigfile.txt', { encoding: 'utf-8' });

stream.on('data', (chunk) => {
  console.log('--- New Chunk ---');
  console.log(chunk); // Har baar ek part of file
});

Ye code console me file ke parts alagsa print karega â€” har baar jab ek chunk milega.

ðŸ’¡ Why Chunks Matter?

Reduce memory usage (no need to load full file).

Process data as it arrives (real-time).

Makes handling big files or continuous data possible.

Improves performance.

.

ðŸ”„ Size of Chunk: highWaterMark
You can control chunk size like this

const stream = fs.createReadStream('bigfile.txt', {
  encoding: 'utf-8',
  highWaterMark: 16 * 1024 // 16 KB per chunk
});


ðŸŽ¯ Interview-Ready One-Liner:
"A chunk is a small portion of data that a stream reads or writes at a time, enabling efficient memory usage and performance when dealing with large or continuous data."